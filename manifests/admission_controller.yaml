---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kite-admission
  name: kite-admission
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kite-admission
  template:
    metadata:
      labels:
        app: kite-admission
        kite.io/no-patch: "1"  # This pod should not be mutated
    spec:
      initContainers:
        - name: wait-for-service
          image: busybox:1.28
          command:
            [
              "sh",
              "-c",
              "until nslookup kite-admission.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for kite-admission; sleep 2; done;",
            ]
      containers:
        - name: kite-admission-webhook
          image: kite:dev
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
            limits:
              cpu: 100m
              memory: 100Mi
          command:
            - kite-k8s-admit
          args:
            - --port=3030
            - --tls-cert=/etc/webhook/certs/tls.crt
            - --tls-key=/etc/webhook/certs/tls.key
            - -c=/etc/kite/config/config.yaml
          ports:
            - containerPort: 3030
              name: webhook
              protocol: TCP
          env:
            - name: IMAGE_NAME  # Needed for the webhook to know which image to inject
              value: "kite:dev"  # TODO: make sure this is consistent with the image name
            - name: KITE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KITE_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /etc/webhook/certs
              name: certs
            - mountPath: /etc/kite/config/
              name: kite-config
      volumes:
        - name: certs
          secret:
            secretName: root-secret
        - name: kite-config
          configMap:
            name: kite-admission-config

---
apiVersion: v1
kind: Service
metadata:
  name: kite-admission
  namespace: default
spec:
  selector:
    app: kite-admission
  type: ClusterIP
  ports:
    - name: kite-admission
      protocol: TCP
      port: 443
      targetPort: 3030

---
kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kite-admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: default/kite-admission
webhooks:
  - name: kite-admission.default.svc
    clientConfig:
      service:
        namespace: default
        name: kite-admission
        path: /webhook
    rules:
      - apiGroups:
          - "apps"
          - ""
        apiVersions:
          - "v1"
        resources:
          - "deployments"
          - "pods"
        operations:
          - "CREATE"
        scope: Namespaced
    sideEffects: None
    failurePolicy: Ignore
    admissionReviewVersions:
      - "v1"


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kite-admission-config
data:
  config.yaml: |
    rules:
    - selectors:
        exclude:
          matchLabels:
            kite.io/no-patch: "true"
      patches:
        - op: add
          path: /metadata/labels/kite.io~1patched
          value: "true"
        - op: add
          path: /metadata/annotations/kite.io~1monitored
          value: "true"
        - op: add
          path: /spec/volumes/-
          value:
            name: kite-socket
            hostPath:
              type: Socket
              path: /var/run/kite/kite.sock
        - op: add
          path: /spec/initContainers/-
          value:
            name: kite
            image: kite:dev
            command: ["kite-init-container"]
            volumeMounts:
              - name: kite-socket
                mountPath: /var/run/kite/kite.sock
            env:
              - name: KITE_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: KITE_POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: KITE_SOCK
                value: /var/run/kite/kite.sock
