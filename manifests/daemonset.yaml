apiVersion: v1
kind: ServiceAccount
metadata:
  name: kite-service-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kite-daemonset-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "services"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kite-daemonset-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kite-daemonset-role
subjects:
  - kind: ServiceAccount
    name: kite-service-account
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kite-agent
spec:
  selector:
    matchLabels:
      app: kite-agent
  template:
    metadata:
      labels:
        app: kite-agent
        kite.io/no-patch: "1"  # This pod should not be mutated
    spec:
      serviceAccountName: kite-service-account
      containers:
        - name: kite-daemon
          image: kite:dev
          args:
            - kite
            # - --label-selector=app=nginx
            # - --field-selector=metadata.namespace=default
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: kite-socket
              mountPath: /var/run/kite
          securityContext:
            privileged: true  # Needed to attach bpf programs
            capabilities:
              add:
                - SYS_ADMIN     # Add capabilities here as required
                - SYS_PTRACE
                - NET_ADMIN     # If network control is needed
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 200m
              memory: 500Mi
          env:
            - name: RUST_BACKTRACE
              value: "full"
            - name: KITE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KITE_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      hostPID: true  # Needed to manage host processes
      volumes:
        - name: kite-socket
          hostPath:
            type: DirectoryOrCreate
            path: /var/run/kite