apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: web-content
          mountPath: /usr/share/nginx/html
      volumes:
      - name: web-content
        configMap:
          name: web-content

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-content
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Dummy Web Server</title>
    </head>
    <body>
        <h1>Hello from the dummy web server!</h1>
    </body>
    </html>

---
apiVersion: v1
kind: Service
metadata:
  name: webserver-service
spec:
  selector:
    app: webserver
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-spammer
  namespace: default
spec:
  initContainers:
    - name: wait-for-service
      image: busybox:1.28
      command:
        [
          "sh",
          "-c",
          "until nslookup webserver-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for webserver-service; sleep 2; done;",
        ]
  containers:
  - name: spammer
    image: busybox:latest
    command: ["/bin/sh", "-c"]
    args:
      - server_host=webserver-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; while true; do wget -O - http://${server_host} >/dev/null 2>&1 ; done;